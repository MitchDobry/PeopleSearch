{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { API_ENDPOINT, XHR_STATUS_IDLE, XHR_STATUS_PENDING, XHR_STATUS_REJECTED, XHR_STATUS_FULFILLED } from '../consts';\nexport const fetchAllResults = createAsyncThunk('results', async () => {\n  const response = await fetch(API_ENDPOINT);\n  return response.json();\n});\nconst slice = createSlice({\n  name: 'Results',\n  initialState: {\n    status: XHR_STATUS_IDLE,\n    errors: null,\n    entities: []\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllResults.pending]: (state, action) => {\n      state.status = XHR_STATUS_PENDING;\n    },\n    [fetchAllResults.rejected]: (state, action) => {\n      state.status = XHR_STATUS_REJECTED;\n      state.errors = action.payload;\n    },\n    [fetchAllResults.fulfilled]: (state, action) => {\n      state.status = XHR_STATUS_FULFILLED;\n      state.entities = action.payload;\n    }\n  }\n});\nexport default slice.reducer;","map":{"version":3,"sources":["/home/mitch/Talkout/src/redux/repositories.js"],"names":["createAsyncThunk","createSlice","API_ENDPOINT","XHR_STATUS_IDLE","XHR_STATUS_PENDING","XHR_STATUS_REJECTED","XHR_STATUS_FULFILLED","fetchAllResults","response","fetch","json","slice","name","initialState","status","errors","entities","reducers","extraReducers","pending","state","action","rejected","payload","fulfilled","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,kBAAxC,EAA4DC,mBAA5D,EAAiFC,oBAAjF,QAA6G,WAA7G;AAEA,OAAO,MAAMC,eAAe,GAAGP,gBAAgB,CAC7C,SAD6C,EAE7C,YAAY;AACR,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACP,YAAD,CAA5B;AACA,SAAOM,QAAQ,CAACE,IAAT,EAAP;AACH,CAL4C,CAAxC;AAQP,MAAMC,KAAK,GAAGV,WAAW,CAAC;AACxBW,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAEX,eADI;AAEZY,IAAAA,MAAM,EAAE,IAFI;AAGZC,IAAAA,QAAQ,EAAE;AAHE,GAFU;AAOxBC,EAAAA,QAAQ,EAAE,EAPc;AAQxBC,EAAAA,aAAa,EAAE;AACb,KAACX,eAAe,CAACY,OAAjB,GAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5CD,MAAAA,KAAK,CAACN,MAAN,GAAeV,kBAAf;AACD,KAHY;AAIb,KAACG,eAAe,CAACe,QAAjB,GAA4B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAACN,MAAN,GAAeT,mBAAf;AACAe,MAAAA,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACE,OAAtB;AACD,KAPY;AAQb,KAAChB,eAAe,CAACiB,SAAjB,GAA6B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC9CD,MAAAA,KAAK,CAACN,MAAN,GAAeR,oBAAf;AACAc,MAAAA,KAAK,CAACJ,QAAN,GAAiBK,MAAM,CAACE,OAAxB;AACD;AAXY;AARS,CAAD,CAAzB;AAuBA,eAAeZ,KAAK,CAACc,OAArB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { API_ENDPOINT, XHR_STATUS_IDLE, XHR_STATUS_PENDING, XHR_STATUS_REJECTED, XHR_STATUS_FULFILLED } from '../consts'\n\nexport const fetchAllResults = createAsyncThunk(\n  'results',\n  async () => {\n      const response = await fetch(API_ENDPOINT)\n      return response.json()\n  }\n)\n\nconst slice = createSlice({\n  name: 'Results',\n  initialState: {\n    status: XHR_STATUS_IDLE,\n    errors: null,\n    entities: []\n  },\n  reducers: {},\n  extraReducers: {\n    [fetchAllResults.pending]: (state, action) => {\n      state.status = XHR_STATUS_PENDING\n    },\n    [fetchAllResults.rejected]: (state, action) => {\n      state.status = XHR_STATUS_REJECTED\n      state.errors = action.payload\n    },\n    [fetchAllResults.fulfilled]: (state, action) => {\n      state.status = XHR_STATUS_FULFILLED\n      state.entities = action.payload\n    }\n  }\n})\n\nexport default slice.reducer\n"]},"metadata":{},"sourceType":"module"}