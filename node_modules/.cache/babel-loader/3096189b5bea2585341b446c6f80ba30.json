{"ast":null,"code":"var _jsxFileName = \"/home/mitch/Talkout/src/components/AppButton.tsx\";\nimport React from \"react\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { colors } from \"../theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppButtonStyled = styled(Button)`\n  opacity: ${props => props.disabled ? 0.5 : 1};\n  color: ${props => props.disabled ? props.variant === \"outlined\" ? colors.pink : `${colors.white} !important` : null};\n  background-clip: ${props => props.variant === \"text\" ? \"text\" : null};\n  -webkit-background-clip: ${props => props.variant === \"text\" ? \"text\" : null};\n  -webkit-text-fill-color: ${props => props.variant === \"text\" ? colors.pink : null};\n\n  &:hover {\n    background: ${props => props.variant === \"outlined\" ? `linear-gradient(${colors.white},${colors.white}) padding-box, linear-gradient(25.18deg, ${colors.primary} 0%, ${colors.primary} 61.58%, ${colors.primary} 100%) border-box;` : props.variant === \"text\" ? \"transparent\" : colors.primary};\n    border: ${props => props.variant === \"outlined\" ? \"2px solid transparent\" : null};\n    -webkit-text-fill-color: ${props => props.variant === \"text\" || props.variant === \"outlined\" ? colors.primary : null};\n    box-shadow: none;\n  }\n`;\n_c = AppButtonStyled;\n\nconst AppButton = ({\n  children,\n  variant,\n  tooltipText,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Tooltip, {\n  title: tooltipText !== null && tooltipText !== void 0 ? tooltipText : \"\",\n  children: /*#__PURE__*/_jsxDEV(AppButtonStyled, {\n    variant: variant,\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this);\n\n_c2 = AppButton;\nexport default AppButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppButtonStyled\");\n$RefreshReg$(_c2, \"AppButton\");","map":{"version":3,"sources":["/home/mitch/Talkout/src/components/AppButton.tsx"],"names":["React","Button","Tooltip","styled","colors","AppButtonStyled","props","disabled","variant","pink","white","primary","AppButton","children","tooltipText","rest"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,MAAT,EAA8BC,OAA9B,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACF,MAAD,CAAS;AACvC,aAAcK,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,GAAjB,GAAuB,CAAG;AACnD,WAAYD,KAAD,IACPA,KAAK,CAACC,QAAN,GACID,KAAK,CAACE,OAAN,KAAkB,UAAlB,GACEJ,MAAM,CAACK,IADT,GAEG,GAAEL,MAAM,CAACM,KAAM,aAHtB,GAII,IAAK;AACb,qBAAsBJ,KAAD,IAAYA,KAAK,CAACE,OAAN,KAAkB,MAAlB,GAA2B,MAA3B,GAAoC,IAAM;AAC3E,6BAA8BF,KAAD,IACzBA,KAAK,CAACE,OAAN,KAAkB,MAAlB,GAA2B,MAA3B,GAAoC,IAAK;AAC7C,6BAA8BF,KAAD,IACzBA,KAAK,CAACE,OAAN,KAAkB,MAAlB,GAA2BJ,MAAM,CAACK,IAAlC,GAAyC,IAAK;AAClD;AACA;AACA,kBAAmBH,KAAD,IACZA,KAAK,CAACE,OAAN,KAAkB,UAAlB,GACK,mBAAkBJ,MAAM,CAACM,KAAM,IAAGN,MAAM,CAACM,KAAM,4CAA2CN,MAAM,CAACO,OAAQ,QAAOP,MAAM,CAACO,OAAQ,YAAWP,MAAM,CAACO,OAAQ,oBAD9J,GAEIL,KAAK,CAACE,OAAN,KAAkB,MAAlB,GACA,aADA,GAEAJ,MAAM,CAACO,OAAQ;AACzB,cAAeL,KAAD,IACRA,KAAK,CAACE,OAAN,KAAkB,UAAlB,GAA+B,uBAA/B,GAAyD,IAAK;AACpE,+BAAgCF,KAAD,IACzBA,KAAK,CAACE,OAAN,KAAkB,MAAlB,IAA4BF,KAAK,CAACE,OAAN,KAAkB,UAA9C,GACIJ,MAAM,CAACO,OADX,GAEI,IAAK;AACf;AACA;AACA,CA7BA;KAAMN,e;;AAoCN,MAAMO,SAA6B,GAAG,CAAC;AACrCC,EAAAA,QADqC;AAErCL,EAAAA,OAFqC;AAGrCM,EAAAA,WAHqC;AAIrC,KAAGC;AAJkC,CAAD,kBAMpC,QAAC,OAAD;AAAS,EAAA,KAAK,EAAED,WAAF,aAAEA,WAAF,cAAEA,WAAF,GAAiB,EAA/B;AAAA,yBACE,QAAC,eAAD;AAAiB,IAAA,OAAO,EAAEN,OAA1B;AAAA,OAAuCO,IAAvC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QANF;;MAAMD,S;AAaN,eAAeA,SAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { Button, ButtonProps, Tooltip } from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { colors } from \"../theme\";\n\nconst AppButtonStyled = styled(Button)`\n  opacity: ${(props) => (props.disabled ? 0.5 : 1)};\n  color: ${(props) =>\n    props.disabled\n      ? props.variant === \"outlined\"\n        ? colors.pink\n        : `${colors.white} !important`\n      : null};\n  background-clip: ${(props) => (props.variant === \"text\" ? \"text\" : null)};\n  -webkit-background-clip: ${(props) =>\n    props.variant === \"text\" ? \"text\" : null};\n  -webkit-text-fill-color: ${(props) =>\n    props.variant === \"text\" ? colors.pink : null};\n\n  &:hover {\n    background: ${(props) =>\n      props.variant === \"outlined\"\n        ? `linear-gradient(${colors.white},${colors.white}) padding-box, linear-gradient(25.18deg, ${colors.primary} 0%, ${colors.primary} 61.58%, ${colors.primary} 100%) border-box;`\n        : props.variant === \"text\"\n        ? \"transparent\"\n        : colors.primary};\n    border: ${(props) =>\n      props.variant === \"outlined\" ? \"2px solid transparent\" : null};\n    -webkit-text-fill-color: ${(props) =>\n      props.variant === \"text\" || props.variant === \"outlined\"\n        ? colors.primary\n        : null};\n    box-shadow: none;\n  }\n`;\n\nexport interface AppButtonProps extends ButtonProps {\n  icon?: React.ReactNode;\n  tooltipText?: string;\n}\n\nconst AppButton: FC<AppButtonProps> = ({\n  children,\n  variant,\n  tooltipText,\n  ...rest\n}) => (\n  <Tooltip title={tooltipText ?? \"\"}>\n    <AppButtonStyled variant={variant} {...rest}>\n      {children}\n    </AppButtonStyled>\n  </Tooltip>\n);\n\nexport default AppButton;\n"]},"metadata":{},"sourceType":"module"}